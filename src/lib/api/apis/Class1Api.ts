/* tslint:disable */
/* eslint-disable */
/**
 * MindWalk 프로젝트 API 문서
 * MindWalk 프로젝트 API 문서입니다.
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AuthRequest,
  AuthResponse,
  BaseResponse,
} from '../models/index';
import {
    AuthRequestFromJSON,
    AuthRequestToJSON,
    AuthResponseFromJSON,
    AuthResponseToJSON,
    BaseResponseFromJSON,
    BaseResponseToJSON,
} from '../models/index';

export interface LoginRequest {
    authRequest: AuthRequest;
}

/**
 * 
 */
export class Class1Api extends runtime.BaseAPI {

    /**
     * 카카오 소셜 로그인을 통해 사용자를 인증하고, 신규 사용자인 경우 자동으로 가입 처리 후 토큰을 발급합니다.
     * 카카오 로그인
     */
    async loginRaw(requestParameters: LoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthResponse>> {
        if (requestParameters['authRequest'] == null) {
            throw new runtime.RequiredError(
                'authRequest',
                'Required parameter "authRequest" was null or undefined when calling login().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json;charset=UTF-8';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("accessToken", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/auth/login`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AuthRequestToJSON(requestParameters['authRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthResponseFromJSON(jsonValue));
    }

    /**
     * 카카오 소셜 로그인을 통해 사용자를 인증하고, 신규 사용자인 경우 자동으로 가입 처리 후 토큰을 발급합니다.
     * 카카오 로그인
     */
    async login(requestParameters: LoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthResponse> {
        const response = await this.loginRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
